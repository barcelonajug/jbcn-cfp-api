
plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

group 'org.jbcn.platform'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
mainClassName = 'io.vertx.core.Launcher'



repositories {
    mavenCentral()
}

def vertxVersion = '3.4.2'
def mainVerticleName = 'org.jbcn.server.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {

    compile "io.vertx:vertx-core:$vertxVersion"
    compile "io.vertx:vertx-web:$vertxVersion"
    compile "io.vertx:vertx-mongo-client:$vertxVersion"

    compile "io.vertx:vertx-service-proxy:$vertxVersion"
    compileOnly "io.vertx:vertx-codegen:$vertxVersion"

    compile 'io.vertx:vertx-auth-common:3.5.0'
    compile 'io.vertx:vertx-auth-mongo:3.5.0'
    compile "io.vertx:vertx-auth-jwt:$vertxVersion"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

/*
sourceSets {
    generated{
        java.srcDir "${projectDir}/src/generated/java"
    }
}

task generateProxies(type: JavaCompile, group: 'build',
        description: 'Generates the Vertx proxies') {
    source = sourceSets.main.java // input source set
    classpath = configurations.compile //+ configurations.vertx // add processor module to classpath
    // specify javac arguments
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor", // vertx processor here
            "-AoutputDirectory=${projectDir}/src/main"
    ]
    // specify output of generated code
    destinationDir = file("${projectDir}/src/generated/java")
}

compileJava {
    dependsOn(generateProxies)
    source    += sourceSets.generated.java
    // specify javac arguments
    options.compilerArgs = [
            "-Acodetrans.output=${projectDir}/src/main"
    ]
}
*/

shadowJar {
    classifier = 'fat'
    manifest {
        attributes "Main-Verticle": mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}
